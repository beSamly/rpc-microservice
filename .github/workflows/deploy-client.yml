# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/GoogleCloudPlatform/github-actions/tree/master/example-workflows/gke

name: Update on client service

on:
  push:
    branches:
      - master
    paths:
      - "client/**"

env:
  GKE_PROJECT: ibct-microservices
  GKE_CLUSTER_NAME: ibct-microservices-cluster-1
  GKE_REGION: asia-northeast1-a
  # GKE_EMAIL: ${{secrets.GKE_EMAIL}}
  # GOOGLE_APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  DOCKER_IMAGE_NAME: besamly2018/rpc-client
  DEPLOYMENT_TO_ROLLOUT: client-depl

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker build
        run: cd client && docker build -t $DOCKER_IMAGE_NAME .

      - name: Docker login
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Docker image push
        run: docker push $DOCKER_IMAGE_NAME

      - uses: GoogleCloudPlatform/google-github-actions/setup-gcloud.
        with:
          # version: "270.0.0"
          service_account_email: ${{secrets.GKE_EMAIL}}
          service_account_key: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}

      - name: Get GKE cluster context
        run: |-
          gcloud container clusters get-credentials $GKE_CLUSTER_NAME --region $GKE_REGION --project $GKE_PROJECT

      - name: Test if context is succesfully loaded
        run: |-
          kubectl get pods

      - name: Rollout client deployment
        run: |-
          kubectl rollout restart deployment $DEPLOYMENT_TO_ROLLOUT
